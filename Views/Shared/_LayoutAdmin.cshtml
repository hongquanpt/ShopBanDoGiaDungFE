@using Microsoft.AspNetCore.Http
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Quản lý cửa hàng</title>

    <!-- CSS -->
    <link rel="stylesheet" href="~/Admin/plugins/fontawesome-free/css/all.min.css">
    <link rel="stylesheet" href="~/Admin/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">
    <link rel="stylesheet" href="~/Admin/plugins/jqvmap/jqvmap.min.css">
    <link rel="stylesheet" href="~/Admin/dist/css/adminlte.min.css">
    <link rel="icon" href="~/Admin/images/logo.png" type="image/png">

    <!-- JS Libraries -->
    <script src="~/new/jquery-3.6.0.min.js"></script>
    <script src="~/new/jwt-decode.min.js"></script>
    <script src="~/new/sweetalert2@10.js"></script>
</head>

<body class="hold-transition sidebar-mini layout-fixed">
    <div class="wrapper">
        <!-- Preloader -->
        <div class="preloader flex-column justify-content-center align-items-center">
            <img class="animation__shake" src="~/BigShopee/images/Logoadmin.png" alt="AdminLTELogo" height="60px"
                width="60px">
        </div>

        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="/Admin/Index" role="button"><i
                            class="fas fa-bars"></i></a>
                </li>
                <li class="nav-item d-none d-sm-inline-block">
                    <a href="/Admin/Index" class="nav-link">Home</a>
                </li>
            </ul>
            <ul class="navbar-nav ml-auto">
                <!-- Thông báo đơn hàng -->
                <li class="nav-item dropdown">
                    <a class="nav-link" data-toggle="dropdown" href="#" id="notificationLink">
                        <i class="far fa-bell"></i>
                        <span class="badge badge-warning navbar-badge" id="notificationCount">0</span>
                    </a>
                    <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right" id="notificationMenu">
                        <span class="dropdown-item dropdown-header"><span id="notificationHeader">0</span> đơn hàng cần
                            xử lý</span>
                        <div class="dropdown-divider"></div>
                        <a href="#" class="dropdown-item dropdown-footer">Xem tất cả thông báo</a>
                    </div>
                </li>
                <!-- Fullscreen -->
                <li class="nav-item">
                    <a class="nav-link" data-widget="fullscreen" href="#" role="button"><i
                            class="fas fa-expand-arrows-alt"></i></a>
                </li>
                <!-- Đăng xuất -->
                <li class="nav-item">
                    <button class="btn btn-danger" id="logoutBtn">Đăng xuất</button>
                </li>
            </ul>
        </nav>
        <!-- Sidebar -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4">
            <a href="/Admin/Index" class="brand-link">
                <img src="~/BigShopee/images/Logoadmin.png" alt="AdminLTE Logo"
                    class="brand-image img-circle elevation-3" style="opacity: .8">
                <span class="brand-text font-weight-light">Quản lý chung</span>
            </a>
            <div class="sidebar">
                <div class="user-panel mt-3 pb-3 mb-3 d-flex">
                    <div class="image">
                        <img src="~/Admin/images/1000.jpg" class="img-circle elevation-2" alt="User Image">
                    </div>
                    <div class="info">
                        <a href="#" class="d-block">Xin chào! <span id="userName">Khách</span></a>
                    </div>
                </div>
                <nav class="mt-2">
                    <ul class="nav nav-pills nav-sidebar flex-column" id="mainMenu" data-widget="treeview" role="menu"
                        data-accordion="false">
                        <!-- Menu sẽ load từ script -->
                    </ul>
                </nav>
            </div>
        </aside>

        <!-- Nội dung chính -->
        @RenderBody()

        <!-- Biểu tượng mở khung chat -->
        <div id="chatIcon" style="position: fixed; bottom: 10px; right: 10px; cursor: pointer;">
            <img src="~/Admin/images/chat.png" alt="Chat" style="width: 80px; height: 50px;">
        </div>

        <!-- Khung chat admin -->
        <div id="adminChatBox"
            style="display: none; position: fixed; bottom: 70px; right: 10px; width: 300px; border: 1px solid #ccc; padding: 10px; background: white;">
            <h5>Chat với Khách hàng</h5>
            <!-- Khu vực chọn khách hàng -->
            <div style="margin-bottom: 10px;">
                <label for="userList">Chọn khách hàng:</label>
                <select id="userList" style="width: 100%; padding: 5px;">
                    <!-- Sẽ được load từ API -->
                </select>
            </div>

            <!-- Khu vực hiển thị tin nhắn -->
            <div id="adminChatMessages"
                style="height: 200px; overflow-y: scroll; border: 1px solid #ddd; margin-bottom: 10px; padding: 5px;">
            </div>

            <!-- Ô nhập tin nhắn -->
            <input type="text" id="adminChatInput" placeholder="Nhập tin nhắn..." style="width: 100%; padding: 5px;">
            <button id="adminSendButton" style="margin-top: 5px; width: 100%;">Gửi</button>
        </div>


        <!-- SignalR -->
        <script src="~/js/signalr.min.js"></script>
        <!-- Các script cho giao diện admin -->
        <script src="~/Admin/plugins/jquery-knob/jquery.knob.min.js"></script>
        <script src="~/Admin/plugins/moment/moment.min.js"></script>
        <script src="~/Admin/plugins/daterangepicker/daterangepicker.js"></script>

        <script>
            document.getElementById("chatIcon").addEventListener("click", () => {
                const adminChatBox = document.getElementById("adminChatBox");
                if (adminChatBox.style.display === "none") {
                    adminChatBox.style.display = "block";
                } else {
                    adminChatBox.style.display = "none";
                }
            });


            var token = localStorage.getItem('token');


            if (!token) {

                window.location.href = window.location.origin + '/Access/Login';
            } else {
                let decodedToken;
                try {
                    decodedToken = jwt_decode(token);

                } catch (err) {

                    localStorage.removeItem('token');
                    window.location.href = window.location.origin + '/Access/Login';
                }

                var currentTime = Date.now() / 1000;
                if (decodedToken.exp < currentTime) {

                    localStorage.removeItem('token');
                    window.location.href = window.location.origin + '/Access/Login';
                }

                const adminId = 23;
                let currentUserId = null;

                function authHeaders() {
                    return {
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer ' + token
                    };
                }

                // Lấy danh sách user

                fetch('https://localhost:7248/api/Chat/all', {
                    headers: authHeaders()
                })
                    .then(res => {

                        return res.json();
                    })
                    .then(users => {

                        const userList = document.getElementById("userList");
                        userList.innerHTML = "";
                        users.forEach(u => {
                            const option = document.createElement("option");
                            option.value = u.maTaiKhoan;
                            option.textContent = u.email || u.name || ("User " + u.id);
                            userList.appendChild(option);
                        });
                    })
                    .catch(err => console.error("Error fetching users:", err));

                // Kết nối SignalR
                const connection = new signalR.HubConnectionBuilder()
                    .withUrl("https://localhost:7248/chathub")
                    .build();

                connection.start()
                    .then(() => {
                        console.log("Admin connected to SignalR");
                    })
                    .catch(err => console.error("Error connecting SignalR:", err));

                // Nhận tin nhắn
                connection.on("ReceiveMessage", (fromUser, message) => {
                    console.log("Received message:", fromUser, message);
                    if (currentUserId && (fromUser === currentUserId.toString() || fromUser === adminId.toString())) {
                        const chatMessages = document.getElementById("adminChatMessages");
                        const div = document.createElement("div");
                        div.textContent = (fromUser == adminId.toString() ? "Bạn" : "User") + ": " + message;
                        chatMessages.appendChild(div);
                        chatMessages.scrollTop = chatMessages.scrollHeight;
                    }
                });

                document.getElementById("userList").addEventListener("change", (e) => {
                    console.log("e:", e.target);
                    currentUserId = parseInt(e.target.value);
                    console.log("Selected user:", currentUserId);

                    connection.invoke("RegisterAdmin", currentUserId.toString())
                        .then(() => console.log("Registered admin to user group:", currentUserId))
                        .catch(err => console.error("Error registering admin:", err));

                    const msgUrl = `https://localhost:7248/api/Chat/messages/${currentUserId}`;
                    console.log("Fetching messages from:", msgUrl);
                    fetch(msgUrl, { headers: authHeaders() })
                        .then(res => {
                            console.log("Messages fetch response:", res);
                            return res.json();
                        })
                        .then(data => {
                            console.log("Messages data:", data);
                            const chatMessages = document.getElementById("adminChatMessages");
                            chatMessages.innerHTML = "";
                            data.forEach(msg => {
                                const div = document.createElement("div");
                                div.textContent = (msg.senderId === adminId ? "Bạn" : "User") + ": " + msg.content;
                                chatMessages.appendChild(div);
                            });
                            chatMessages.scrollTop = chatMessages.scrollHeight;
                        })
                        .catch(err => console.error("Error fetching messages:", err));
                });

                document.getElementById("adminSendButton").addEventListener("click", () => {
                    if (!currentUserId) {
                        console.log("No currentUserId selected, can't send message");
                        return;
                    }
                    const message = document.getElementById("adminChatInput").value.trim();
                    if (!message) {
                        console.log("Empty message, not sending");
                        return;
                    }

                    console.log("Sending message to user:", currentUserId, "Message:", message);

                    // Gửi qua SignalR
                    connection.invoke("SendMessageToUser", currentUserId.toString(), message)
                        .then(() => console.log("Message sent via SignalR"))
                        .catch(err => console.error("Error sending via SignalR:", err));

                    // Lưu tin nhắn vào DB
                    const sendUrl = `https://localhost:7248/api/Chat/${currentUserId}/send`;
                    console.log("Sending message to API:", sendUrl);
                    fetch(sendUrl, {
                        method: 'POST',
                        headers: authHeaders(),
                        body: JSON.stringify({ senderId: adminId, receiverId: currentUserId, content: message })
                    })
                        .then(res => {
                            console.log("API response:", res);
                            if (!res.ok) {
                                console.error("API returned error:", res.statusText);
                            }
                        })
                        .catch(err => console.error("Error calling API:", err));

                    document.getElementById("adminChatInput").value = "";
                });

                // Cập nhật giao diện
                $(document).ready(function () {
                    console.log("Document ready, update UI");
                    var name = decodedToken['unique_name'] || decodedToken['name'] || decodedToken['email'] || 'Admin';
                    $('#userName').text(name);

                    $.ajaxSetup({
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader('Authorization', 'Bearer ' + token);
                        }
                    });

                          function fetchPendingOrders() {
                $.ajax({
                    url: 'https://localhost:7248/api/Order/pending',
                    method: 'GET',
                    success: function (response) {
                        console.log("Pending orders:", response);
                        $('#notificationCount').text(response.length);
                        $('#notificationHeader').text(response.length + ' đơn hàng cần xử lý');

                        var notificationMenu = $('#notificationMenu');
                        notificationMenu.find('.dropdown-item:not(.dropdown-footer)').remove();

                        response.forEach(function (order) {
                            var item = `
                                <a href="/Admin/QuanLyDH/${order.maDonHang}" class="dropdown-item">
                                    <i class="fas fa-envelope mr-2"></i> Mã đơn hàng: ${order.maDonHang}
                                    <span class="float-right text-muted text-sm">Ngày lập: ${order.ngayLap}</span>
                                </a>`;
                            notificationMenu.append(item);
                        });
                    },
                    error: function (error) {
                        console.error('Lỗi khi lấy danh sách đơn hàng:', error);
                    }
                });
            }

            // Lấy pending orders khi load trang
            fetchPendingOrders();
                    // Kết nối SignalR
            const orderHubConnection = new signalR.HubConnectionBuilder()
                .withUrl("https://localhost:7248/orderHub") // tuỳ cấu hình
                .build();

            orderHubConnection.start().then(() => {
                console.log("Admin connected to OrderHub");
                // Nếu dùng group
                // orderHubConnection.invoke("RegisterAdmin", "admin");
            }).catch(err => console.error("SignalR error:", err));

            // Nhận sự kiện "ReceiveNewOrder"
            orderHubConnection.on("ReceiveNewOrder", (newOrder) => {
                console.log("Có đơn hàng mới:", newOrder);
                // Gọi API để cập nhật danh sách pending
                fetchPendingOrders();
                // Hoặc hiện popup tuỳ ý
            });
                    $('#logoutBtn').on('click', function (e) {
                        e.preventDefault();
                        Swal.fire({
                            title: 'Bạn có chắc chắn muốn đăng xuất?',
                            showCancelButton: true,
                            confirmButtonText: 'Đăng xuất',
                            cancelButtonText: 'Hủy',
                        }).then((result) => {
                            if (result.isConfirmed) {
                                localStorage.removeItem('token');
                                window.location.href = window.location.origin + '/Access/Login';
                            }
                        });
                    });

                    buildMenu(decodedToken);
                });

                function buildMenu(token) {
                        var menuItems = [
                            { text: 'Trang chủ', url: '/Admin/Index', icon: 'fas fa-home', permission: null },
                            { text: 'Quản lý tài khoản', url: '/Admin/QuanLyTK', icon: 'fas fa-users-cog', permission: 'QuanLyTaiKhoan:Xem' },
                            { text: 'Quản lý chức vụ', url: '/Admin/QuanLyCV', icon: 'fas fa-user-tag', permission: 'QuanLyChucVu:Xem' },
                            { text: 'Quản lý danh mục', url: '/Admin/QuanLyDM', icon: 'fas fa-list-alt',  permission: 'QuanLyDanhMuc:Xem' },
                            { text: 'Quản lý hãng', url: '/Admin/QuanLyHang', icon: 'fas fa-industry', permission: 'QuanLyHang:Xem' },
                            { text: 'Quản lý sản phẩm', url: '/Admin/QuanLySP', icon: 'fas fa-boxes', permission: 'QuanLySanPham:Xem' },
                            { text: 'Quản lý đơn hàng', url: '/Admin/QuanLyDH', icon: 'fas fa-shopping-cart', permission: 'QuanLyDonHang:Xem' },
                            { text: 'Nhật ký hệ thống', url: '/Admin/Log', icon: 'fas fa-book', permission: 'Access:Xem' }
                        ];
                    var menu = $('#mainMenu');
                    menu.empty();

                    var permissions = token.permissions || [];
                    menuItems.forEach(function (item) {
                        if (!item.permission || permissions.includes(item.permission)) {
                            var menuItem = `
                                <li class="nav-item">
                                    <a href="${item.url}" class="nav-link">
                                        <i class="nav-icon ${item.icon}"></i>
                                        <p>${item.text}</p>
                                    </a>
                                </li>`;
                            menu.append(menuItem);
                        }
                    });
                }
            }
        </script>
    </div>
</body>

</html>
